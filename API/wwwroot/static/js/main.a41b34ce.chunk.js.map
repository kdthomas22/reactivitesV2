{"version":3,"sources":["app/models/pagination.ts","app/API/activityApi.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/Loading.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/Form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/EditProfile.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","getActivities","params","getActivityDetails","id","createActivity","activity","updateActivity","deleteActivity","attend","Account","getCurrentUser","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","editProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","setLoadingInitial","isLoading","loadActivities","axiosParams","result","setActivity","setPagination","console","log","userStore","attendee","newActivity","hostUsername","attendees","runInAction","editActivity","updatedActivity","getActivity","updateAttendance","isGoing","filter","x","cancelActivityToggle","isCancelled","updateAttendeeFollowing","following","followersCount","some","isHost","host","find","Date","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","updatingProfile","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","registerUser","cred","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","label","touched","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Loading","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","nullable","useParams","useHistory","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","details","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityForm","ActivityDetails","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.a41b34ce.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async function (response) {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      await sleep(1000);\r\n    }\r\n\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"Unauthorized\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  getActivities: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  getActivityDetails: (id: string) =>\r\n    requests.get<Activity>(`/activities/${id}`),\r\n  createActivity: (activity: ActivityFormValues) =>\r\n    requests.post(\"/activities\", activity),\r\n  updateActivity: (activity: ActivityFormValues) =>\r\n    requests.put(`/activities/${activity.id}`, activity),\r\n  deleteActivity: (id: string) => requests.del(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  getCurrentUser: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  editProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  city: string;\r\n  venue: string;\r\n  category: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  attendees: Profile[];\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  date: Date | null;\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.venue = activity.venue;\r\n      this.city = activity.city;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  photos?: Photo[];\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../API/activityApi\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  setLoadingInitial = (isLoading: boolean) => {\r\n    this.loadingInitial = isLoading;\r\n  };\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.getActivities(this.axiosParams);\r\n      result.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.createActivity(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  editActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.updateActivity(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.deleteActivity(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => [(this.loading = false)]);\r\n    }\r\n  };\r\n\r\n  getActivityDetails = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.getActivityDetails(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              (x) => x.username !== user?.username\r\n            );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity!.isCancelled;\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUsername\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../API/activityApi\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  updatingProfile = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((x) => x.isMain)!.isMain = false;\r\n          this.profile.photos.find((x) => x.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  editProfile = async (profile: Partial<Profile>) => {\r\n    this.updatingProfile = true;\r\n    try {\r\n      await agent.Profiles.editProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.updatingProfile = false;\r\n      });\r\n    } catch (err) {\r\n      runInAction(() => {\r\n        this.updatingProfile = false;\r\n      });\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.loadingFollowings = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../API/activityApi\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) {\r\n      this.user.image = image;\r\n    }\r\n  };\r\n\r\n  setDisplayName = (displayName: string) => {\r\n    if (this.user) this.user.displayName = displayName;\r\n  };\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getCurrentUser = async () => {\r\n    try {\r\n      const user = await agent.Account.getCurrentUser();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  registerUser = async (cred: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(cred);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing the connection: \", error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n        <Menu.Item name=\"Errors\" as={NavLink} to=\"/errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            positive\r\n            content=\"Create Activity\"\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Reveal, Button } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username == profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not Following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface ProfileCardProps {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: ProfileCardProps) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface AttendeeProps {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: AttendeeProps) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 3,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface ActivityListItemsProps {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: ActivityListItemsProps) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || `/assets/user.png`}\r\n              style={{ marginBottom: 3 }}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{\" \"}\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"view\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Item, Segment, Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>{\" \"}\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport Loading from \"../../../app/layout/Loading\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface MyTextInputProps {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: MyTextInputProps) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.error && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n            loading={isSubmitting}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface ValidationProps {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: ValidationProps) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n        displayName: \"\",\r\n        username: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .registerUser(values)\r\n          .catch((errors) => setErrors({ error: errors }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n            loading={isSubmitting}\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h1\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go To Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface LoadingProps {\r\n  inverted?: boolean;\r\n  content: string;\r\n}\r\n\r\nexport default function Loading({\r\n  inverted = true,\r\n  content = \"Loading ... \",\r\n}: LoadingProps) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface MyTextAreaProps {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: MyTextAreaProps) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.error && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface MySelectInputProps {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: MySelectInputProps) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.error && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.error && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport Loading from \"../../../app/layout/Loading\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    createActivity,\r\n    editActivity,\r\n    getActivityDetails,\r\n    loadingInitial,\r\n  } = activityStore;\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required(\"Date cannot be empty\").nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n  const history = useHistory();\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() => {\r\n        history.push(`/activities/${newActivity.id}`);\r\n      });\r\n    } else {\r\n      editActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getActivityDetails(id).then((activity) => {\r\n        setActivity(new ActivityFormValues(activity));\r\n      });\r\n    }\r\n  }, [id, getActivityDetails]);\r\n\r\n  if (loadingInitial) return <Loading content=\"Loading ...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n              loading={isSubmitting}\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n              as={Link}\r\n              to=\"/activities\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Button, Loader } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            loading={loading}\r\n            color=\"teal\"\r\n            onClick={updateAttendance}\r\n            disabled={activity.isCancelled}\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface SidebarProps {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: SidebarProps) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loading from \"../../../app/layout/Loading\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    getActivityDetails,\r\n    loadingInitial,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) getActivityDetails(id);\r\n  }, [id, getActivityDetails]);\r\n\r\n  if (!activity || loadingInitial) return <Loading content=\"Loading ..\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        We Can't Find This!\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to Activities\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" content={commonStore.error?.message} color=\"red\" />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack Trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Formik } from \"formik\";\r\nimport { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport * as Yup from \"yup\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function EditProfile({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, editProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        editProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({ displayName: Yup.string().required() })}\r\n    >\r\n      {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit}>\r\n          <MyTextInput name=\"displayName\" placeholder={\"Display Name\"} />\r\n          <MyTextArea rows={3} placeholder={\"Add your bio\"} name=\"bio\" />\r\n          <Button\r\n            floated=\"right\"\r\n            positive\r\n            type=\"submit\"\r\n            content=\"Update profile\"\r\n            loading={isSubmitting}\r\n            disabled={!dirty || !isValid}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport EditProfile from \"./EditProfile\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const {\r\n    profileStore: { isCurrentUser, profile },\r\n  } = useStore();\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {editMode ? (\r\n            <EditProfile setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react\";\r\nimport { SyntheticEvent, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\r\n    profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card as={Link} to={`/activities/${activity.id}`}>\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n                loading={loading}\r\n              />\r\n              <Button\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n                disabled={loading}\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((x) => (\r\n                <Card key={x.id}>\r\n                  <Image src={x.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={\"main\" + x.id}\r\n                        disabled={x.isMain}\r\n                        loading={target === \"main\" + x.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(x, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === x.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(x, e)}\r\n                        disabled={x.isMain}\r\n                        name={x.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: \"About\",\r\n      render: () => <ProfileAbout />,\r\n    },\r\n    {\r\n      menuItem: \"Photos\",\r\n      render: () => <ProfilePhotos profile={profile} />,\r\n    },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Reveal,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loading from \"../../app/layout/Loading\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadProfile, loadingProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <Loading content=\"Loading Profile\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/Form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport Loading from \"./Loading\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getCurrentUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <Loading content=\"Loading App ... \" />;\n\n  return (\n    <>\n      <ToastContainer position=\"top-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}